// Generated by CoffeeScript 1.7.1
var __slice = [].slice;

jQuery(function($) {
  return $.model = setup_hotkeys();
});

(function($, window) {
  var CitySimulation;
  CitySimulation = (function() {
    CitySimulation.prototype.defaults = {
      paramA: 'foo',
      paramB: 'bar'
    };

    function CitySimulation(el, options) {
      this.options = $.extend({}, this.defaults, options);
      this.$el = $(el);
      this.setup_hotkeys();
      this.model = new CityModel(this.$el.attr('id'), 16, -16, 16, -16, 16);
      this.seed = GPW.pronounceable(8);
      this.seed = "ousphoun";
    }

    CitySimulation.prototype.run = function() {
      Math.seedrandom(this.seed);
      this.model.debug();
      return this.model.start();
    };

    CitySimulation.prototype.restart = function() {
      this.model.reset();
      this.model = new CityModel(this.$el.attr('id'), 16, -16, 16, -16, 16);
      return this.run();
    };

    CitySimulation.prototype.set_key_command = function(key, fn) {
      return $(document).bind('keydown', key, fn);
    };

    CitySimulation.prototype.setup_hotkeys = function() {
      this.set_key_command('a', function() {
        return console.log('A');
      });
      return this.set_key_command('alt+r', (function(_this) {
        return function() {
          return _this.restart();
        };
      })(this));
    };

    return CitySimulation;

  })();
  return $.fn.extend({
    CitySimulation: function() {
      var args, option;
      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return this.each(function() {
        var $this, data;
        $this = $(this);
        data = $this.data('CitySimulation');
        if (!data) {
          $this.data('CitySimulation', (data = new CitySimulation(this, option)));
        }
        if (typeof option === 'string') {
          return data[option].apply(data, args);
        }
      });
    }
  });
})(window.jQuery, window);
