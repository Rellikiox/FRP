// Generated by CoffeeScript 1.7.1
var FSMAgent, MovingAgent, extend,
  __slice = [].slice;

extend = function() {
  var method, mixin, mixin_list, name, obj, _i, _len, _ref, _results;
  obj = arguments[0], mixin_list = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
  _results = [];
  for (_i = 0, _len = mixin_list.length; _i < _len; _i++) {
    mixin = mixin_list[_i];
    _ref = mixin.prototype;
    for (name in _ref) {
      method = _ref[name];
      obj[name] = method;
    }
    _results.push(obj);
  }
  return _results;
};

FSMAgent = (function() {
  function FSMAgent() {}

  FSMAgent.prototype.current_state = null;

  FSMAgent.prototype.current_state_name = null;

  FSMAgent.prototype.init = function() {};

  FSMAgent.prototype.step = function() {
    return this.current_state();
  };

  FSMAgent.prototype.s_die = function() {
    return this.die();
  };

  FSMAgent.prototype._set_state = function(new_state) {
    this._log("" + this.id + ": " + this.current_state_name + " -> " + new_state);
    return this._update_state(new_state);
  };

  FSMAgent.prototype._set_initial_state = function(state) {
    this._log("" + this.id + ": @" + state);
    return this._update_state(state);
  };

  FSMAgent.prototype._update_state = function(state) {
    this.current_state_name = state;
    this.label = this._get_label();
    return this.current_state = this['s_' + this.current_state_name];
  };

  FSMAgent.prototype.update_label = function() {
    return this.label = this._get_label();
  };

  FSMAgent.prototype._get_label = function() {
    var label;
    if (this.show_ids) {
      label = "" + this.id;
    }
    if (this.show_ids && this.show_states) {
      label += ": ";
    }
    if (this.show_states) {
      label += "" + this.current_state_name;
    }
    return label;
  };

  FSMAgent.prototype._log = function(msg) {
    if (this.show_logs) {
      return console.log(msg);
    }
  };

  FSMAgent.prototype._link_to = function(agent) {
    if (this.show_links) {
      return CityModel.link_agents(this, agent);
    }
  };

  FSMAgent.prototype._clear_links = function() {
    var link, _i, _len, _ref, _results;
    _ref = this.myLinks();
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      link = _ref[_i];
      _results.push(link.die());
    }
    return _results;
  };

  return FSMAgent;

})();

MovingAgent = (function() {
  function MovingAgent() {}

  MovingAgent.prototype.speed = 0.05;

  MovingAgent.prototype._move = function(point) {
    this._face_point(point);
    return this.forward(this.speed);
  };

  MovingAgent.prototype._face_point = function(point) {
    var heading, turn;
    heading = this._angle_between_points(point, this);
    turn = ABM.util.subtractRads(heading, this.heading);
    return this.rotate(turn);
  };

  MovingAgent.prototype._angle_between_points = function(point_a, point_b) {
    var dx, dy;
    dx = point_a.x - point_b.x;
    dy = point_a.y - point_b.y;
    return Math.atan2(dy, dx);
  };

  MovingAgent.prototype._in_point = function(point) {
    return 0.1 > ABM.util.distance(this.x, this.y, point.x, point.y);
  };

  MovingAgent.prototype._get_terrain_path_to = function(point) {
    var p, path;
    path = CityModel.instance.terrainAStar.getPath(this, point);
    return (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = path.length; _i < _len; _i++) {
        p = path[_i];
        _results.push(CityModel.get_patch_at(p));
      }
      return _results;
    })();
  };

  MovingAgent.prototype._get_road_path_to = function(point) {
    var p, path;
    path = CityModel.instance.roadAStar.getPath(this, point);
    return (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = path.length; _i < _len; _i++) {
        p = path[_i];
        _results.push(CityModel.get_patch_at(p));
      }
      return _results;
    })();
  };

  return MovingAgent;

})();
