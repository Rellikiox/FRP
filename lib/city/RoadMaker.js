// Generated by CoffeeScript 1.7.1
var RoadConnector, RoadExtender, RoadMaker,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RoadMaker = (function() {
  function RoadMaker() {}

  RoadMaker.road_makers = null;

  RoadMaker.default_color = [255, 255, 255];

  RoadMaker.radius_increment = 3;

  RoadMaker.initialize_module = function(road_makers_breed) {
    this.road_makers = road_makers_breed;
    return this.road_makers.setDefault('color', this.default_color);
  };

  RoadMaker.spawn_road_connector = function(road_a, road_b) {
    var road_maker;
    road_maker = this.spawn_road_maker(road_a, RoadConnector.prototype);
    road_maker.init(road_b);
    return road_maker;
  };

  RoadMaker.spawn_road_extender = function(endpoint) {
    var road_maker;
    road_maker = this.spawn_road_maker(CityModel.instance.city_hall, RoadExtender.prototype);
    road_maker.init(endpoint);
    return road_maker;
  };

  RoadMaker.spawn_road_maker = function(patch, prototype) {
    var road_maker;
    road_maker = patch.sprout(1, this.road_makers)[0];
    extend(road_maker, BaseAgent.prototype);
    extend(road_maker, prototype);
    return road_maker;
  };

  RoadMaker.prototype.speed = 0.05;

  RoadMaker.prototype._drop_road = function() {
    return Road.set_breed(this.p);
  };

  RoadMaker.prototype.s_die = function() {
    return this.die();
  };

  return RoadMaker;

})();

RoadExtender = (function(_super) {
  __extends(RoadExtender, _super);

  function RoadExtender() {
    return RoadExtender.__super__.constructor.apply(this, arguments);
  }

  RoadExtender.prototype.init = function(endpoint) {
    this.endpoint = endpoint;
    this._set_state('go_to_point_state');
    return this.msg_reader = MessageBoard.get_reader('inspect_endpoint');
  };

  RoadExtender.prototype.s_go_to_point_state = function() {
    var closest_road_to_target;
    if (this.path == null) {
      closest_road_to_target = Road.get_closest_road_to(this.endpoint);
      this.path = this._get_terrain_path_to(closest_road_to_target);
    }
    this._move(this.path[0]);
    if (this._in_point(this.path[0])) {
      this.path.shift();
      if (this.path.length === 0) {
        this.path = CityModel.instance.terrainAStar.getPath(this, this.endpoint);
        return this._set_state('build_to_point_state');
      }
    }
  };

  RoadExtender.prototype.s_build_to_point_state = function() {
    this._move(this.path[0]);
    if (!Road.is_road(this.p)) {
      this._drop_road();
    }
    if (this._in_point(this.path[0])) {
      this.path.shift();
      if (this.path.length === 0) {
        this.msg_reader.post_message({
          patch: this.p
        });
        return this._set_state('die');
      }
    }
  };

  return RoadExtender;

})(RoadMaker);

RoadConnector = (function(_super) {
  __extends(RoadConnector, _super);

  function RoadConnector() {
    return RoadConnector.__super__.constructor.apply(this, arguments);
  }

  RoadConnector.prototype.init = function(endpoint) {
    this.startingpoint = this.p;
    this.endpoint = endpoint;
    this._set_state('build_to_point_state');
    return this.msg_reader = MessageBoard.get_reader('inspect_endpoint');
  };

  RoadConnector.prototype.s_build_to_point_state = function() {
    if (this.path == null) {
      this.path = this._get_terrain_path_to(this.endpoint);
    }
    this._move(this.path[0]);
    if (!Road.is_road(this.p)) {
      this._drop_road();
    }
    if (this._in_point(this.path[0])) {
      this.path.shift();
      if (this.path.length === 0) {
        this.msg_reader.post_message({
          patch: this.startingpoint
        });
        this.msg_reader.post_message({
          patch: this.endpoint
        });
        return this._set_state('die');
      }
    }
  };

  return RoadConnector;

})(RoadMaker);
