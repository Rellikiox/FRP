// Generated by CoffeeScript 1.7.1
var HouseMaker;

HouseMaker = (function() {
  function HouseMaker() {}

  HouseMaker.house_makers = null;

  HouseMaker.default_color = [255, 0, 0];

  HouseMaker.initialize_module = function(house_makers_breed) {
    this.house_makers = house_makers_breed;
    return this.house_makers.setDefault('color', this.default_color);
  };

  HouseMaker.spawn_house_maker = function(patch) {
    var house_maker;
    house_maker = patch.sprout(1, this.house_makers)[0];
    extend(house_maker, BaseAgent.prototype);
    extend(house_maker, HouseMaker.prototype);
    house_maker.init();
    return house_maker;
  };

  HouseMaker.prototype.speed = 0.05;

  HouseMaker.prototype.init = function() {
    return this._set_state('move_and_place');
  };

  HouseMaker.prototype.s_move_and_place = function() {
    var near_patches, patch, _i, _j, _len, _len1, _results;
    near_patches = ABM.util.shuffle(this.p.n);
    for (_i = 0, _len = near_patches.length; _i < _len; _i++) {
      patch = near_patches[_i];
      if (!House.isHouseHere(patch) && !Road.is_road(patch)) {
        this._place_house(patch);
        break;
      }
    }
    near_patches = ABM.util.shuffle(this.p.n4);
    _results = [];
    for (_j = 0, _len1 = near_patches.length; _j < _len1; _j++) {
      patch = near_patches[_j];
      if (Road.is_road(patch)) {
        this._move(patch);
        break;
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  HouseMaker.prototype._place_house = function(patch) {
    return House.set_breed(patch);
  };

  return HouseMaker;

})();
