// Generated by CoffeeScript 1.7.1
var Colors;

Colors = {
  rgbToHsl: function(r, g, b) {
    var d, h, l, max, min, s;
    r /= 255;
    g /= 255;
    b /= 255;
    max = Math.max(r, g, b);
    min = Math.min(r, g, b);
    l = (max + min) / 2;
    if (max === min) {
      h = s = 0;
    } else {
      d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;
        case g:
          h = (b - r) / d + 2;
          break;
        case b:
          h = (r - g) / d + 4;
      }
      h /= 6;
    }
    return [h, s, l];
  },
  hslToRgb: function(h, s, l) {
    var b, g, hue2rgb, p, q, r;
    if (s === 0) {
      r = g = b = l;
    } else {
      hue2rgb = function(p, q, t) {
        if (t < 0) {
          t += 1;
        }
        if (t > 1) {
          t -= 1;
        }
        if (t < 1 / 6) {
          return p + (q - p) * 6 * t;
        }
        if (t < 1 / 2) {
          return q;
        }
        if (t < 2 / 3) {
          return p + (q - p) * (2 / 3 - t) * 6;
        }
        return p;
      };
      q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      p = 2 * l - q;
      r = hue2rgb(p, q, h + 1 / 3);
      g = hue2rgb(p, q, h);
      b = hue2rgb(p, q, h - 1 / 3);
    }
    return [r * 255, g * 255, b * 255];
  },
  rgbify: function(colr) {
    colr = colr.replace(/#/, '');
    if (colr.length === 3) {
      return [parseInt(colr.slice(0, 1) + colr.slice(0, 1), 16), parseInt(colr.slice(1, 2) + colr.slice(1, 1), 16), parseInt(colr.slice(2, 3) + colr.slice(2, 1), 16)];
    } else if (colr.length === 6) {
      return [parseInt(colr.slice(0, 2), 16), parseInt(colr.slice(2, 4), 16), parseInt(colr.slice(4, 6), 16)];
    } else {
      return [0, 0, 0];
    }
  },
  hexify: function(rgb) {
    var colr;
    colr = '#';
    colr += Math.floor(rgb[0]).toString(16);
    colr += Math.floor(rgb[1]).toString(16);
    colr += Math.floor(rgb[2]).toString(16);
    return colr;
  },
  lighten: function(rgb, percent) {
    var hsl, lightness;
    if (typeof rgb === 'string') {
      rgb = this.rgbify(rgb);
    }
    hsl = this.rgbToHsl.apply(this, rgb);
    lightness = hsl[2] + (hsl[2] * percent);
    lightness = Math.min(1.0, lightness);
    return this.hexify(this.hslToRgb(hsl[0], hsl[1], lightness));
  },
  darken: function(rgb, percent) {
    var hsl, lightness;
    if (typeof rgb === 'String') {
      rgb = this.rgbify(rgb);
    }
    hsl = this.rgbToHsl.apply(this, rgb);
    lightness = hsl[2] - (hsl[2] * percent);
    lightness = Math.max(0.0, hsl[2]);
    return this.hexify(this.hslToRgb(hsl[0], hsl[1], lightness));
  }
};
